# Default values for common.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: jonpulsifer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http-alt
      protocol: TCP
      name: http-alt

ingress:
  enabled: false
  ingressClassName: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: &host chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: *host
      hosts:
        - *host

# env:
# - name: ENVIRONMENT
#   value: "dev"
# - name: LOG_LEVEL
#   valueFrom:
#     configMapKeyRef:
#       name: log-level
#       key: log-level

probes:
  liveness:
    enabled: false
    httpGet:
      path: /
      port: http-alt
    initialDelaySeconds: 30
    periodSeconds: 10
  readiness:
    enabled: false
    httpGet:
      path: /
      port: http-alt
    initialDelaySeconds: 5
    periodSeconds: 10

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
